== Welcome to Pario

Pario is a Gosu Game framework that helps to give you structure and a start for creating games. 

== Getting Started

1. At the command prompt, create a new Pario application
  <tt>pario new my_game</tt> (where <tt>myapp</tt> is the game name)

2. Change the directory to <tt>myapp</tt> and start the game
  <tt>pario play</tt>

  Also, you can specify the game window size (full screen is not currently supported, yet).
  <tt>pario play 800 600</tt> 

3. To create more classes for your game (which will appear in the game folder)
 <tt>pario create my_class</tt> (where <tt>my_class</tt> is the name of your class)
 

  ADVANCED: You may also want to create many classes(files) and relate them. 
  Pario will not create subfolders, rather, it will autogenerate the code inside and properly relate them.
  ** NOTE: This can be done manually, which means you'll need to create the files and add
  the appropriate 'require' statements. Pario simplifies this for you.
  
  <tt>pario create my_class menu background</tt>

  --menu.rb
  class Menu
  end
  
  --background.rb
  class Background
  end

  --my_game.rb
  require 'menu'
  require 'background'
  class MyGame
    ...
  end
  
== Learning Ruby

* Ruby4kids: http://www.ruby4kids.com
* HacketyHack: http://hackety-hack.com/
* Learn to Program: http://pine.fm/LearnToProgram/

These two resources will bring you up to speed on the Ruby language and also on
programming in general.

== Description of Contents

The default directory structure of a generated Pario application:

MyApp
  |-- config
  |-- doc
  |-- game
  |-- lib
  |-- media
  |   |-- audio
  |   `-- images

config
  Configuration files for your game should be placed in here.
  
doc
  This directory is where your application documentation will be stored when
  generated using <tt>rake doc:app</tt>
  
game
  Holds all of the code that's deals with your particular game
  
lib
  Contains any library or module you want to use to extend your game. These will be auto-loaded when your game starts
